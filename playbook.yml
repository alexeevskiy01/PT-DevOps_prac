- name: install_postgres
  hosts: all
  become: true
  tasks:
    - name: install postgresql-{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}
      package: 
        name: postgresql
        state: present
    - name: install psycopg
      package: 
        name: postgresql-contrib
        state: present
    - name: install libpq-dev
      package:
        name: libpq-dev
        state: present

- name: deloy_db
  hosts: host01
  become: true
  tasks:
    - name: copy
      template:
        src: init.sql
        dest: /tmp/init.sql
        mode: '0644'
    - name: chown
      command: chown postgres:postgres /tmp/init.sql
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted
    - name: init.sql
      command: psql -a -f /tmp/init.sql
      become: true
      become_user: postgres

- name: replication_conf
  hosts: host01
  become: true
  tasks:
    - name: postgresql.conf
      blockinfile:
        path: "/etc/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/main/postgresql.conf"
        block: |
          listen_addresses = '*'
          wal_level=replica
          hot_standby=on
          max_wal_senders=10
          max_replication_slots=10
          hot_standby_feedback=on
          log_replication_commands=on
          archive_mode = on
          archive_command = 'cp %p /oracle/pg_data/archive/%f'
    - name: pg_hba.conf
      blockinfile:
        path: "/etc/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/main/pg_hba.conf"
        block: | 
          host replication all {{ hostvars[inventory_hostname]['ansible_host'] }}/24 scram-sha-256
          host all all {{ hostvars[inventory_hostname]['ansible_host'] }}/32 trust
    - name: create directory
      command: mkdir -p /oracle/pg_data/archive
    - name: chmod
      command: chmod 777 /oracle/pg_data/archive
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted
      
- name: deloy_db-repl
  hosts: host02
  become: true
  tasks:
    - name: rm
      command: rm -rf /var/lib/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/
    - name: pg_basebackup
      command: pg_basebackup -h {{ hostvars[inventory_hostname]['DB_HOST'] }} -D /var/lib/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/main/ -U {{ hostvars[inventory_hostname]['DB_REPL_USER'] }} -vP -w
      environment: 
        PGPASSWORD: "{{ hostvars[inventory_hostname]['DB_REPL_PASSWORD'] }}"
    - name: chown
      command: chown -R postgres:postgres /var/lib/postgresql/
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted

- name: bot
  hosts: host01
  become: true
  tasks:
    - name: install git
      package: 
        name: git
        state: present
    - name: mkdir
      command: mkdir -p "{{ hostvars[inventory_hostname]['dir'] }}/bot"
    - name: git clone
      git:
        repo: https://github.com/alexeevskiy01/PT-DevOps_prac.git
        dest: "{{ hostvars[inventory_hostname]['dir'] }}/bot"
        version: main
    - name: install pip
      package: 
        name: pip
        state: present
    - name: pip install
      pip: 
        requirements: "{{ hostvars[inventory_hostname]['dir'] }}/bot/requirements.txt"
    - name: run python bot
      command: python3 "{{ hostvars[inventory_hostname]['dir'] }}/bot/bot-4prac.py"
      environment:
        TOKEN: "{{ hostvars[inventory_hostname]['TOKEN'] }}"
        RM_HOST: "{{ hostvars[inventory_hostname]['RM_HOST'] }}"
        RM_PORT: "{{ hostvars[inventory_hostname]['RM_PORT'] }}"
        RM_USER: "{{ hostvars[inventory_hostname]['RM_USER'] }}"
        RM_PASSWORD: "{{ hostvars[inventory_hostname]['RM_PASSWORD'] }}"
        DB_HOST: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        DB_PORT: "{{ hostvars[inventory_hostname]['DB_PORT'] }}"
        DB_USER: "{{ hostvars[inventory_hostname]['DB_USER'] }}"
        DB_PASSWORD: "{{ hostvars[inventory_hostname]['DB_PASSWORD'] }}"
        DB_DATABASE: "{{ hostvars[inventory_hostname]['DB_DATABASE'] }}"
        PG_VERSION: "{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}"
    
      
